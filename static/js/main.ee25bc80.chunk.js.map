{"version":3,"sources":["context/FunctionContext.js","hoc/Layout/Layout.js","components/Display/Display.js","hoc/Ax/Ax.js","components/Buttons/Button/Button.js","components/Buttons/Operators/Operators.js","components/Buttons/Numbers/Numbers.js","components/Buttons/Equal/Equal.js","components/Buttons/ClearButton/ClearButton.js","components/Buttons/Buttons.js","App.js","serviceWorker.js","index.js"],"names":["functionContext","React","createContext","numberClicked","operatorClicked","equalClicked","clearClicked","Layout","state","initialValue","hasOperator","calculated","numberHandler","e","persist","setState","prevState","props","target","value","operatorHandler","newValue","splice","length","join","clearScreenHandler","calculateHandler","eval","className","currentDisplay","this","Provider","Component","Display","Ax","children","Button","classes","val","data-text","dataText","onClick","clicked","Operators","FunctionContext","Consumer","context","clickOperator","Numbers","Equal","ClearButton","Buttons","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ee25bc80.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst functionContext = React.createContext({\r\n\tnumberClicked: () => {},\r\n\toperatorClicked: () => {},\r\n\tequalClicked: () => {},\r\n\tclearClicked: () => {}\r\n});\r\n\r\nexport default functionContext;\r\n","import React, {Component} from \"react\";\r\nimport Display from \"../../components/Display/Display\";\r\nimport Buttons from \"../../components/Buttons/Buttons\";\r\nimport FunctionContext from \"../../context/FunctionContext\";\r\n\r\nclass Layout extends Component {\r\n\tstate = {\r\n\t\tinitialValue: 0,\r\n\t\thasOperator: false,\r\n\t\tcalculated: false\r\n\t};\r\n\r\n\tnumberHandler = e => {\r\n\t\te.persist();\r\n\t\tthis.setState((prevState, props) => {\r\n\t\t\tif (!prevState.calculated) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tinitialValue:\r\n\t\t\t\t\t\tprevState.initialValue === 0\r\n\t\t\t\t\t\t\t? e.target.value\r\n\t\t\t\t\t\t\t: prevState.initialValue + e.target.value,\r\n\t\t\t\t\thasOperator: false\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tinitialValue: e.target.value,\r\n\t\t\t\t\thasOperator: false,\r\n\t\t\t\t\tcalculated: false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\t// console.log(this.state.initialValue);\r\n\t};\r\n\r\n\toperatorHandler = e => {\r\n\t\te.persist();\r\n\r\n\t\tthis.setState((prevState, props) => {\r\n\t\t\tif (prevState.hasOperator === false) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tinitialValue:\r\n\t\t\t\t\t\t// prevState.initialValue + e.target.getAttribute(\"data-text\"),\r\n\t\t\t\t\t\tprevState.initialValue + e.target.value,\r\n\t\t\t\t\thasOperator: true,\r\n\t\t\t\t\tcalculated: false\r\n\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tconst newValue = [...this.state.initialValue];\r\n\t\t\t\tnewValue.splice(newValue.length - 1, 1);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tinitialValue: newValue.join(\"\") + e.target.value\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\t// console.log(this.state.initialValue);\r\n\t};\r\n\r\n\tclearScreenHandler = () => {\r\n\t\tthis.setState({initialValue: 0});\r\n\t};\r\n\r\n\tcalculateHandler = () => {\r\n\t\tthis.setState((prevState, props) => {\r\n\t\t\treturn {\r\n\t\t\t\tinitialValue: eval(prevState.initialValue),\r\n\t\t\t\tcalculated: true\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"columns is-centered is-gapless\">\r\n\t\t\t\t\t<div className=\"column is-half\">\r\n\t\t\t\t\t\t<h1 className=\"title\">Calculator</h1>\r\n\t\t\t\t\t\t<Display currentDisplay={this.state.initialValue} />\r\n\t\t\t\t\t\t<FunctionContext.Provider\r\n\t\t\t\t\t\t\tvalue={{\r\n\t\t\t\t\t\t\t\tnumberClicked: this.numberHandler,\r\n\t\t\t\t\t\t\t\toperatorClicked: this.operatorHandler,\r\n\t\t\t\t\t\t\t\tclearClicked: this.clearScreenHandler,\r\n\t\t\t\t\t\t\t\tequalClicked: this.calculateHandler\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Buttons\r\n\t\t\t\t\t\t\t\tnumberClicked={this.numberHandler}\r\n\t\t\t\t\t\t\t\toperatorClicked={this.operatorHandler}\r\n\t\t\t\t\t\t\t\tclearClicked={this.clearScreenHandler}\r\n\t\t\t\t\t\t\t\tequalClicked={this.calculateHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FunctionContext.Provider>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst Display = props => <div className=\"Display\">{props.currentDisplay}</div>;\r\n\r\nexport default Display;\r\n","const Ax = props => props.children;\r\n\r\nexport default Ax;\r\n","import React from \"react\";\r\n\r\nconst Button = props => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={props.classes}\r\n\t\t\tvalue={props.val}\r\n\t\t\tdata-text={props.dataText}\r\n\t\t\tonClick={props.clicked}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Ax from \"../../../hoc/Ax/Ax\";\r\nimport Button from \"../Button/Button\";\r\nimport FunctionContext from \"../../../context/FunctionContext\";\r\n\r\nconst Operators = props => (\r\n\t<FunctionContext.Consumer>\r\n\t\t{context => (\r\n\t\t\t<Ax>\r\n\t\t\t\t<div className=\"column is-one-quarter Operators\">\r\n\t\t\t\t\t<Button clicked={props.clickOperator} dataText=\"+\" val=\"+\">\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-quarter  Operators\">\r\n\t\t\t\t\t<Button clicked={props.clickOperator} dataText=\"-\" val=\"-\">\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-quarter Operators\">\r\n\t\t\t\t\t<Button clicked={props.clickOperator} dataText=\"x\" val=\"*\">\r\n\t\t\t\t\t\tx\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-quarter Operators\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclicked={props.clickOperator}\r\n\t\t\t\t\t\tdataText=\"&divide;\"\r\n\t\t\t\t\t\tval=\"/\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&divide;\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Ax>\r\n\t\t)}\r\n\t</FunctionContext.Consumer>\r\n);\r\n\r\nexport default Operators;\r\n","import React from \"react\";\r\nimport Ax from \"../../../hoc/Ax/Ax\";\r\nimport Button from \"../Button/Button\";\r\nimport FunctionContext from \"../../../context/FunctionContext\";\r\n\r\nconst Numbers = props => (\r\n\t<FunctionContext.Consumer>\r\n\t\t{context => (\r\n\t\t\t<Ax>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"7\">\r\n\t\t\t\t\t\t7\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"8\">\r\n\t\t\t\t\t\t8\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"9\">\r\n\t\t\t\t\t\t9\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"4\">\r\n\t\t\t\t\t\t4\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"5\">\r\n\t\t\t\t\t\t5\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"6\">\r\n\t\t\t\t\t\t6\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"1\">\r\n\t\t\t\t\t\t1\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"2\">\r\n\t\t\t\t\t\t2\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"3\">\r\n\t\t\t\t\t\t3\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\"0\">\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t\t<Button clicked={context.numberClicked} val=\".\">\r\n\t\t\t\t\t\t.\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Ax>\r\n\t\t)}\r\n\t</FunctionContext.Consumer>\r\n);\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport FunctionContext from \"../../../context/FunctionContext\";\r\n\r\nconst Equal = props => (\r\n\t<FunctionContext.Consumer>\r\n\t\t{context => (\r\n\t\t\t<Button clicked={context.equalClicked} val=\"=\">\r\n\t\t\t\t=\r\n\t\t\t</Button>\r\n\t\t)}\r\n\t</FunctionContext.Consumer>\r\n);\r\n\r\nexport default Equal;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport FunctionContext from \"../../../context/FunctionContext\";\r\n\r\nconst ClearButton = props => (\r\n\t<FunctionContext.Consumer>\r\n\t\t{context => (\r\n\t\t\t<div className=\"column is-one-third\">\r\n\t\t\t\t<Button val=\"clear\" clicked={context.clearClicked}>\r\n\t\t\t\t\tC\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t</FunctionContext.Consumer>\r\n);\r\n\r\nexport default ClearButton;\r\n","import React from \"react\";\r\nimport Operators from \"./Operators/Operators\";\r\nimport Numbers from \"./Numbers/Numbers\";\r\nimport Equal from \"./Equal/Equal\";\r\nimport ClearButton from \"./ClearButton/ClearButton\";\r\nimport Ax from \"../../hoc/Ax/Ax\";\r\n\r\nconst Buttons = props => (\r\n\t<Ax>\r\n\t\t<div className=\"columns is-gapless is-multiline\">\r\n\t\t\t<Operators clickOperator={props.operatorClicked}/>\r\n\t\t\t<div className=\"column is-three-quarter\">\r\n\t\t\t\t<div className=\"columns is-gapless is-multiline Numbers\">\r\n\t\t\t\t\t<Numbers/>\r\n\t\t\t\t\t<ClearButton />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"column is-one-quarter Equal\">\r\n\t\t\t\t<Equal />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Ax>\r\n);\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport \"./App.sass\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Layout />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}