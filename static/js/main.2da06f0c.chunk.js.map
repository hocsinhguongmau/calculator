{"version":3,"sources":["components/Display/Input/Input.js","components/Display/Display.js","hoc/Ax/Ax.js","components/Buttons/Button/Button.js","components/Buttons/Operators/Operators.js","components/Buttons/Numbers/Numbers.js","components/Buttons/Equal/Equal.js","components/Buttons/Buttons.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","type","className","class","Display","Ax","children","Button","classes","value","val","Operators","Numbers","Equal","Buttons","Layout","state","number","currentOperator","formula","inputHandler","changeInput","this","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2da06f0c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Input = props => <input type={props.type} className={props.class} />;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Input from \"./Input/Input\";\r\n\r\nconst Display = props => (\r\n\t<div className=\"Display\">\r\n\t\t<div className=\"field\">\r\n\t\t\t<div className=\"control\">\r\n\t\t\t\t<Input type=\"text\" class=\"input is-primary Display\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Display;\r\n","const Ax = props => props.children;\r\n\r\nexport default Ax;\r\n","import React from \"react\";\r\n\r\nconst Button = props => {\r\n\treturn <button className={props.classes} value={props.val}>{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Ax from \"../../../hoc/Ax/Ax\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Operators = props => (\r\n\t<Ax>\r\n\t\t<div className=\"column is-one-quarter Operators\">\r\n\t\t\t<Button val=\"+\">\r\n\t\t\t\t+\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-quarter  Operators\">\r\n\t\t\t<Button val=\"-\">\r\n\t\t\t\t&minus;\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-quarter Operators\">\r\n\t\t\t<Button val=\"*\">\r\n\t\t\t\t&times;\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-quarter Operators\">\r\n\t\t\t<Button val=\"/\">\r\n\t\t\t\t&divide;\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t</Ax>\r\n);\r\n\r\nexport default Operators;\r\n","import React from \"react\";\r\nimport Ax from \"../../../hoc/Ax/Ax\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Numbers = props => (\r\n\t<Ax>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"7\">7</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"8\">8</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"9\">9</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"4\">4</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"5\">5</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"6\">6</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"1\">1</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"2\">2</Button>\r\n\t\t</div>\r\n\t\t<div className=\"column is-one-third\">\r\n\t\t\t<Button val=\"3\">3</Button>\r\n\t\t</div>\r\n\t</Ax>\r\n);\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Equal = props => (\r\n\t<Button val=\"=\">\r\n\t\t=\r\n\t</Button>\r\n);\r\n\r\nexport default Equal;\r\n","import React from \"react\";\r\nimport Operators from \"./Operators/Operators\";\r\nimport Numbers from \"./Numbers/Numbers\";\r\nimport Equal from \"./Equal/Equal\";\r\nimport Ax from \"../../hoc/Ax/Ax\";\r\n\r\nconst Buttons = props => (\r\n\t<Ax>\r\n\t\t<div className=\"columns is-gapless is-multiline\">\r\n\t\t\t<Operators />\r\n\t\t\t<div className=\"column is-three-quarter\">\r\n\t\t\t\t<div className=\"columns is-gapless is-multiline Numbers\">\r\n\t\t\t\t\t<Numbers />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"column is-one-quarter Equal\">\r\n\t\t\t\t<Equal />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Ax>\r\n);\r\n\r\nexport default Buttons;\r\n","import React, {Component} from \"react\";\r\nimport Display from \"../../components/Display/Display\";\r\nimport Buttons from \"../../components/Buttons/Buttons\";\r\n\r\nclass Layout extends Component {\r\n\tstate = {\r\n\t\tnumber: 0,\r\n\t\tcurrentOperator: null,\r\n\t\tformula: null\r\n\t};\r\n\r\n\tinputHandler=()=>{\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"columns is-centered is-gapless\">\r\n\t\t\t\t\t<div className=\"column is-half\">\r\n\t\t\t\t\t\t<h1 className=\"title\">Calculator</h1>\r\n\t\t\t\t\t\t<Display />\r\n\t\t\t\t\t\t<Buttons changeInput={this.inputHandler} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport \"./App.sass\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Layout />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}